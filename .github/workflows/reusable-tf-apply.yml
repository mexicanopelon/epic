name: Reusable TF Apply Workflow

on:
  workflow_call:
    inputs:
      TF_WORKSPACE:
        required: true
        type: string
      TF_DIR:
        required: true
        type: string
      TF_PLAN_SHA:
        required: true
        type: string
      TF_PLAN_EXIT_CODE:
        required: true
        type: string
env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}

jobs:
  tf_apply:
    name: 'Terraform Apply'
    runs-on: ubuntu-latest
    environment: ${{ inputs.TF_WORKSPACE }}

    # Set working directory
    defaults:
      run:
        shell: bash
        working-directory: ./${{ inputs.TF_DIR }}

    steps:
        # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

        # Install the latest version of the Terraform CLI
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

        # Set TF_WORKSPACE Environment Variable
      - name: Set TF_WORKSPACE Environment Variable
        run: echo "TF_WORKSPACE=${{ inputs.TF_WORKSPACE }}" >> $GITHUB_ENV

        # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
      - name: Terraform Init
        id: init
        run: terraform init

        # List the Terraform workspaces to verify the correct one is selected.
      - name: Terraform List Workspace
        id: workspace-list
        run: terraform workspace list
          
        # Download saved plan from artifacts
      - name: Download Terraform Plan Artifact
        id: download
        uses: actions/download-artifact@v4
        if: github.ref == 'refs/heads/main'
        with:
          name: ${{ inputs.TF_PLAN_SHA }}-tfplan
          path: ${{ inputs.TF_DIR }}
  
        # Terraform Apply
      - name: Terraform Apply
        id: apply
        if: github.ref == 'refs/heads/main' && ${{ inputs.TF_PLAN_EXIT_CODE }} == 2
        run: |
          terraform apply -auto-approve -input=false ${{ inputs.TF_PLAN_SHA }}.tfplan
